/*
 * Copyright (C) 2021, K2N.IO.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 *
 */

plugins {
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'java'
    id 'maven'
    id 'signing'
}

repositories {
    mavenCentral()
    maven { url "https://s01.oss.sonatype.org/content/repositories/snapshots" }
    mavenLocal()
}

group = 'com.gocypher.cybench.launcher.plugin'
archivesBaseName = 'cybench-launcher-gradle-plugin'
version = '1.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    shadow localGroovy()
    shadow gradleApi()

    testCompile 'junit:junit:4.13.2'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.13.1'
    compile 'org.apache.httpcomponents:httpclient:4.5.13'
    compile 'com.jcabi:jcabi-manifests:1.1'
    compile 'com.github.oshi:oshi-core:6.1.0'
    compile 'org.jhardware:jHardware:0.8.6'
    compile 'com.gocypher.cybench.client:gocypher-cybench-runner:1.4-SNAPSHOT'
    compile 'com.gocypher.cybench.client:gocypher-cybench-annotations:1.4-SNAPSHOT'

    implementation 'org.openjdk.jmh:jmh-core:1.34'
    annotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.34'

    compile 'org.reflections:reflections:0.10.2'
    compile 'org.twdata.maven:mojo-executor:2.3.2'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

artifacts {
    archives javadocJar, sourceJar
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    useGpgCmd()
    sign configurations.archives
}

// Build, sign, and upload
uploadArchives {
    repositories {
        mavenDeployer {

            // Sign POM
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            // Destination
            repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
            snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            // Add required metadata to POM
            pom.project {
                name project.property('archivesBaseName')
                description 'Gradle plugin designed to execute JMH benchmarks, collect results, add environment properties, build report and store it into external repository for further analysis.'
                url 'https://github.com/K2NIO/gocypher-cybench-gradle'
                packaging 'jar'

                scm {
                    url 'https://github.com/K2NIO/gocypher-cybench-gradle'
                    connection 'scm:git:git://github.com/K2NIO/gocypher-cybench-gradle'
                    developerConnection 'scm:git:git//github.com/K2NIO/gocypher-cybench-gradle'
                }
                organization {
                    name 'K2N.IO'
                    url 'https://cybench.io'
                }
                licenses {
                    license {
                        name 'GNU Lesser General Public License v2.1'
                        url 'https://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt'
                    }
                }

                developers {
                    developer {
                        name 'CyBench Team'
                        email 'info@cybench.io'
                        organizationUrl 'https://cybench.io'
                    }
                }
            }
        }
    }
}

gradlePlugin {
    plugins {
        multiplePlugin {
            id = project.property('archivesBaseName')
            implementationClass = 'com.gocypher.cybench.Launcher'
        }
    }
}

task release(type: Zip) {
    from 'build/libs/'
    include '*'
    destinationDir(file('./release'))
}